on:
  workflow_call:
    inputs:
      rid:
        required: true
        type: string
      tfm:
        required: true
        type: string
      build_host:
        required: true
        type: string
      use_tar:
        required: true
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build:

    name: Build for ${{ inputs.rid }}, ${{ inputs.tfm }}

    runs-on: ${{ inputs.build_host }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Download Current Time
      uses: actions/download-artifact@v3
      with:
        name: build_time
    - name: Get Current Time
      shell: pwsh
      run: |
        cat build_time.txt >> $env:GITHUB_ENV
    - name: Get Short Commit SHA
      shell: pwsh
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $env:GITHUB_ENV
    - name: Set Version Number
      shell: pwsh
      run: |
        echo "version_suffix=${{ github.ref_name }}.${{ env.sha_short }}.${{ github.run_number }}" >> $env:GITHUB_ENV
    - name: Set Output Folder
      shell: pwsh
      run: |
        echo "output_folder=publish/${{ inputs.tfm }}/${{ inputs.rid }}" >> $env:GITHUB_ENV
    - name: Set .NET Publish Configuration
      shell: pwsh
      run: |
        echo "publish_config=-r ${{ inputs.rid }} -c Release -f ${{ inputs.tfm }} --sc false -o ${{ env.output_folder }} --version-suffix ${{ env.version_suffix }} -p:PublishReadyToRun=false -p:PublishSingleFile=true -p:UseAppHost=true --no-restore" >> $env:GITHUB_ENV
    - name: Update "is_local_build"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: is_local_build
        value: false
    - name: Update "framework"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: framework
        value: ${{ inputs.tfm }}
    - name: Update "runtime_id"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: runtime_id
        value: ${{ inputs.rid }}
    - name: Update "branch"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: version_info.branch
        value: ${{ github.ref_name }}
    - name: Update "commit_sha"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: version_info.commit_sha
        value: ${{ github.sha }}
    - name: Update "ci_run"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: version_info.ci_run
        value: ${{ github.run_number }}
    - name: Update "created_at"
      uses: jossef/action-set-json-field@v1
      with:
        file: Yuyuyui.PrivateServer/Resources/version.json
        field: version_info.created_at
        value: ${{ env.current_time }}
    - name: Restore dependencies
      run: dotnet restore -r ${{ inputs.rid }}
    - name: Build Private Server GUI
      run: dotnet publish Yuyuyui.PrivateServer.GUI/Yuyuyui.PrivateServer.GUI.csproj ${{ env.publish_config }}
    - name: Build Private Server CLI
      run: dotnet publish Yuyuyui.PrivateServer.CLI/Yuyuyui.PrivateServer.CLI.csproj ${{ env.publish_config }}
    - name: Build Account Transfer CLI
      run: dotnet publish Yuyuyui.AccountTransfer.CLI/Yuyuyui.AccountTransfer.CLI.csproj ${{ env.publish_config }}
    - name: Archive Production Artifacts as Tar
      if: ${{ inputs.use_tar }}
      run: tar zcf ${{ inputs.rid }}.tar.gz -C ${{ env.output_folder }} .
    - name: Archive Production Artifacts as Zip
      if: ${{ ! inputs.use_tar }}
      run: 7za a ${{ inputs.rid }}.zip ./${{ env.output_folder }}/*
    - name: Upload Production Artifacts
      if: ${{ inputs.use_tar }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.rid }}
        path: ${{ inputs.rid }}.tar.gz
        retention-days: 1
    - name: Upload Production Artifacts
      if: ${{ !inputs.use_tar }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.rid }}
        path: ${{ inputs.rid }}.zip
        retention-days: 1